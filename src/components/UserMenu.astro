---
// User menu component for authenticated users
---

<div id="user-menu" class="fixed top-6 left-6 z-50 hidden">
  <div class="relative">
    <button 
      id="user-menu-button"
      class="flex items-center space-x-3 bg-white/80 backdrop-blur-sm border border-purple-200 rounded-full px-4 py-2 shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105"
    >
      <div class="w-8 h-8 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center text-white font-semibold text-sm">
        <span id="user-initial">U</span>
      </div>
      <span id="user-name" class="text-gray-700 font-medium">User</span>
      <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
      </svg>
    </button>
    
    <div id="user-dropdown" class="absolute top-full left-0 mt-2 w-48 bg-white rounded-lg shadow-xl border border-gray-200 py-2 hidden transform scale-95 opacity-0 transition-all duration-200">
      <div class="px-4 py-2 border-b border-gray-100">
        <p class="text-sm text-gray-500">Signed in as</p>
        <p id="user-email" class="text-sm font-medium text-gray-900">user@example.com</p>
      </div>
      
      <button class="w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-purple-50 transition-colors">
        <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
        </svg>
        Profile Settings
      </button>
      
      <button class="w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-purple-50 transition-colors">
        <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4"></path>
        </svg>
        Diary Settings
      </button>
      
      <hr class="my-2">
      
      <button id="logout-btn" class="w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50 transition-colors">
        <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
        </svg>
        Sign Out
      </button>
    </div>
  </div>
</div>

<style>
  #user-dropdown.show {
    transform: scale(1);
    opacity: 1;
  }
</style>

<script>
  const userMenu = document.getElementById('user-menu');
  const userMenuButton = document.getElementById('user-menu-button');
  const userDropdown = document.getElementById('user-dropdown');
  const logoutBtn = document.getElementById('logout-btn');
  const userInitial = document.getElementById('user-initial');
  const userName = document.getElementById('user-name');
  const userEmail = document.getElementById('user-email');
  
  // Toggle dropdown
  userMenuButton?.addEventListener('click', () => {
    userDropdown?.classList.toggle('hidden');
    userDropdown?.classList.toggle('show');
  });
  
  // Close dropdown when clicking outside
  document.addEventListener('click', (e) => {
    if (!userMenu?.contains(e.target as Node)) {
      userDropdown?.classList.add('hidden');
      userDropdown?.classList.remove('show');
    }
  });
  
  // Logout
  logoutBtn?.addEventListener('click', () => {
    localStorage.removeItem('session');
    window.location.reload();
  });
  
  // Update user info
  function updateUserInfo(user: { name: string; email: string }) {
    if (userInitial) userInitial.textContent = user.name.charAt(0).toUpperCase();
    if (userName) userName.textContent = user.name;
    if (userEmail) userEmail.textContent = user.email;
    userMenu?.classList.remove('hidden');
  }
  
  // Expose function globally
  (window as any).updateUserInfo = updateUserInfo;
</script>